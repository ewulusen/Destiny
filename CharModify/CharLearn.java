/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CharModify;

import destiny.Kezdo;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultListModel;

/**
 *
 * @author ewulusen
 */
public class CharLearn extends javax.swing.JFrame {
public int point;
public String kaszt;
public String szint;
public String abilityId;
    /**
     * Creates new form CharLearn
     */
    public CharLearn() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TNev = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        MTNeve = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Ar = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ID = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Szint = new javax.swing.JList();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });

        TNev.setForeground(new java.awt.Color(51, 51, 255));
        TNev.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TNevAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(TNev);

        MTNeve.setForeground(new java.awt.Color(51, 255, 0));
        MTNeve.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                MTNeveAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(MTNeve);

        jLabel1.setText("Tanulható");

        jLabel2.setText("Megtanult");

        jLabel3.setText("Költhető Pontok");

        jLabel4.setText("jLabel4");
        jLabel4.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel4AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jButton1.setText("Tanul=>");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        Ar.setEnabled(false);
        Ar.setFocusable(false);
        Ar.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                ArAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane3.setViewportView(Ar);

        jLabel5.setText("Ára:");

        jLabel6.setText("Neve:");

        jLabel7.setText("Neve:");

        ID.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                IDAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane4.setViewportView(ID);

        jLabel8.setText("jLabel8");
        jLabel8.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel8AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Szint.setEnabled(false);
        Szint.setFocusable(false);
        Szint.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                SzintAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane5.setViewportView(Szint);

        jLabel9.setText("szint :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel6)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addGap(142, 142, 142)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(154, 154, 154)
                                .addComponent(jLabel2))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane5)
                            .addComponent(jScrollPane2))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel8)
                        .addGap(42, 42, 42)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        
    }//GEN-LAST:event_formComponentAdded

    private void jLabel4AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel4AncestorAdded
      
        
    }//GEN-LAST:event_jLabel4AncestorAdded

    private void TNevAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TNevAncestorAdded
    try {
        
       Statement stmt=Kezdo.conn.conn.createStatement();
       String sql="SELECT * from KARAKTERL WHERE KAR_ID='"+Charakters.CharakterId+"'";
       ResultSet rs=stmt.executeQuery(sql);
       rs.next();
       kaszt=rs.getString("KAR_KASZT");
       szint=rs.getString("K_SZINT");
       point=Integer.parseInt(rs.getString("K_APOINT"));
       jLabel4.setText(Integer.toString(point));
       
        DefaultListModel model = new DefaultListModel(); //create a new list model
        sql="SELECT AB_ID, AB_NEV, AB_AR,AB_SZINT FROM ABILITY WHERE AB_KASZT ='"+kaszt+"'"
        +"OR AB_KASZT = 'any' and AB_SZINT<='"+szint+"'";
        ResultSet res=stmt.executeQuery(sql);
        while (res.next()) {
            Statement stmt2=Kezdo.conn.conn.createStatement();
            String sql2="SELECT PAB_A FROM PLAY_AB WHERE PAB_P='"+Charakters.CharakterId+"'";
            ResultSet rs2=stmt2.executeQuery(sql2);
             if(rs2.next()) {//ha van ugyan olyan
               // System.out.println(rs2.getString("PAB_A"));
            if(res.getString("AB_ID").equals(rs2.getString("PAB_A"))){
               // System.out.println("egyenlő");
            }}
            else {
         //System.out.println("else ág");
        String itemCode = res.getString("AB_NEV"); //get the element in column "item_code"
        model.addElement(itemCode); //add each item to the model
            }
            }
        
      TNev.setModel(model);
      

    

    } catch (SQLException ex) {
       System.out.println("error in the List 1"+ ex);
    }
    }//GEN-LAST:event_TNevAncestorAdded

    private void MTNeveAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_MTNeveAncestorAdded
      try {
       
       Statement stmt=Kezdo.conn.conn.createStatement();
       DefaultListModel model = new DefaultListModel(); //create a new list model
       String sql="SELECT ABILITY.AB_NEV FROM ABILITY,PLAY_AB WHERE ABILITY.AB_ID =PLAY_AB.PAB_A and PLAY_AB.PAB_P='"+Charakters.CharakterId+"'";
       ResultSet res=stmt.executeQuery(sql);
       while (res.next()) {
       String itemCode = res.getString("AB_NEV"); //get the element in column "item_code"
       model.addElement(itemCode); //add each item to the model
      
      
        }
      MTNeve.setModel(model);
      

    

    } catch (SQLException ex) {
       System.out.println("error in the List 2"+ ex);
    }
    }//GEN-LAST:event_MTNeveAncestorAdded

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
         try {
      int selectedIndex;
      selectedIndex=TNev.getSelectedIndex();
          //System.out.println(jList1.getSelectedIndex());
       abilityId=ID.getModel().getElementAt(selectedIndex).toString();
       szint=Szint.getModel().getElementAt(selectedIndex).toString();
        if (point>Integer.parseInt(Ar.getModel().getElementAt(TNev.getSelectedIndex()).toString())){
        Statement stmt=Kezdo.conn.conn.createStatement();
        String sql="insert into PLAY_AB (PAB_A,PAB_P,PAB_SZ) value"
                +"('"+abilityId+"','"+Charakters.CharakterId+"','"+szint+"')";
        stmt.executeUpdate(sql);
        point=point-(Integer.parseInt(Ar.getModel().getElementAt(TNev.getSelectedIndex()).toString()));
        jLabel4.setText(Integer.toString(point));
        sql="update KARAKTERL set K_APOINT='"+point+"' where KAR_ID='"+Charakters.CharakterId+"'";
        stmt.executeUpdate(sql);
       this.setVisible(false); //this will close frame i.e. NewJFrame
       new CharLearn().setVisible(true); 

        
        }
        else {
        
            jLabel8.setText("nincs elég pontod");
            jLabel8.setVisible(true);
            
        }
        } catch (SQLException ex) {
        System.out.println("error in the insert ability: "+ ex);
    }
         
      
      
      
    }//GEN-LAST:event_jButton1MouseClicked

    private void ArAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_ArAncestorAdded
            try {
 
        
       Statement stmt=Kezdo.conn.conn.createStatement();
        DefaultListModel model = new DefaultListModel(); //create a new list model
        String sql="SELECT AB_ID, AB_NEV, AB_AR,AB_SZINT FROM ABILITY WHERE AB_KASZT ='"+kaszt+"'"
        +"OR AB_KASZT = 'any' and AB_SZINT<='"+szint+"'";
         ResultSet res=stmt.executeQuery(sql);
        while (res.next()) {
            Statement stmt2=Kezdo.conn.conn.createStatement();
            String sql2="SELECT PAB_A FROM PLAY_AB WHERE PAB_P='"+Charakters.CharakterId+"'";
            ResultSet rs2=stmt2.executeQuery(sql2);
             if(rs2.next()) {//ha van ugyan olyan
               // System.out.println(rs2.getString("PAB_A"));
            if(res.getString("AB_ID").equals(rs2.getString("PAB_A"))){
              //  System.out.println("egyenlő");
            }}
            else {
        // System.out.println("else ág");
        String itemCode = res.getString("AB_AR"); //get the element in column "item_code"
        model.addElement(itemCode); //add each item to the model
            }
            }
      Ar.setModel(model);
      

    

    } catch (SQLException ex) {
       System.out.println("error in the List 3"+ ex);
    }
    }//GEN-LAST:event_ArAncestorAdded

    private void IDAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_IDAncestorAdded
          try {
        
     
       Statement stmt=Kezdo.conn.conn.createStatement();
        DefaultListModel model = new DefaultListModel(); //create a new list model
        String sql="SELECT AB_ID, AB_NEV, AB_AR,AB_SZINT FROM ABILITY WHERE AB_KASZT ='"+kaszt+"'"
        +"OR AB_KASZT = 'any' and AB_SZINT<='"+szint+"'";
         ResultSet res=stmt.executeQuery(sql);
        while (res.next()) {
            Statement stmt2=Kezdo.conn.conn.createStatement();
            String sql2="SELECT PAB_A FROM PLAY_AB WHERE PAB_P='"+Charakters.CharakterId+"'";
            ResultSet rs2=stmt2.executeQuery(sql2);
             if(rs2.next()) {//ha van ugyan olyan
              //  System.out.println(rs2.getString("PAB_A"));
            if(res.getString("AB_ID").equals(rs2.getString("PAB_A"))){
              //  System.out.println("egyenlő");
            }}
            else {
        // System.out.println("else ág");
        String itemCode = res.getString("AB_ID"); //get the element in column "item_code"
        model.addElement(itemCode); //add each item to the model
            }
            }
      ID.setModel(model);
      
      

    

    } catch (SQLException ex) {
       System.out.println("error in the List 4"+ ex);
    }
    }//GEN-LAST:event_IDAncestorAdded

    private void jLabel8AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel8AncestorAdded
             jLabel8.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8AncestorAdded

    private void SzintAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_SzintAncestorAdded
               try {
 
       Statement stmt=Kezdo.conn.conn.createStatement();
        DefaultListModel model = new DefaultListModel(); //create a new list model
        String sql="SELECT AB_ID, AB_NEV, AB_AR,AB_SZINT FROM ABILITY WHERE AB_KASZT ='"+kaszt+"'"
        +"OR AB_KASZT = 'any' and AB_SZINT<='"+szint+"'";
         ResultSet res=stmt.executeQuery(sql);
        while (res.next()) {
            Statement stmt2=Kezdo.conn.conn.createStatement();
            String sql2="SELECT PAB_A FROM PLAY_AB WHERE PAB_P='"+Charakters.CharakterId+"'";
            ResultSet rs2=stmt2.executeQuery(sql2);
             if(rs2.next()) {//ha van ugyan olyan
               // System.out.println(rs2.getString("PAB_A"));
            if(res.getString("AB_ID").equals(rs2.getString("PAB_A"))){
                
            }}
            else {
         
        String itemCode = res.getString("AB_SZINT"); //get the element in column "item_code"
        model.addElement(itemCode); //add each item to the model
            }
            }
      Szint.setModel(model);
      

    

    } catch (SQLException ex) {
       System.out.println("error in the List 3"+ ex);
    }
    
    }//GEN-LAST:event_SzintAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CharLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CharLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CharLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CharLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CharLearn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList Ar;
    private javax.swing.JList ID;
    private javax.swing.JList MTNeve;
    private javax.swing.JList Szint;
    private javax.swing.JList TNev;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables
}
