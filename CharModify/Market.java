/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CharModify;

import destiny.Kezdo;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author ewulusen
 */
public class Market extends javax.swing.JFrame {
        DefaultListModel modeln = new DefaultListModel();
        DefaultListModel modela = new DefaultListModel();
        DefaultListModel models = new DefaultListModel();
        DefaultListModel modelm = new DefaultListModel();
        DefaultListModel modelmm = new DefaultListModel();
        DefaultListModel modelac = new DefaultListModel();
        DefaultListModel modeldmg = new DefaultListModel();
        DefaultListModel modelid = new DefaultListModel();
        DefaultListModel modelj = new DefaultListModel();
        

    /**
     * Creates new form Market
     */
    public Market() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane15 = new javax.swing.JScrollPane();
        jList15 = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList7 = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jList8 = new javax.swing.JList();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jList9 = new javax.swing.JList();
        jScrollPane10 = new javax.swing.JScrollPane();
        jList10 = new javax.swing.JList();
        jScrollPane11 = new javax.swing.JScrollPane();
        jList11 = new javax.swing.JList();
        jScrollPane12 = new javax.swing.JScrollPane();
        jList12 = new javax.swing.JList();
        jScrollPane13 = new javax.swing.JScrollPane();
        jList13 = new javax.swing.JList();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jList14 = new javax.swing.JList();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jList16 = new javax.swing.JList();
        jScrollPane17 = new javax.swing.JScrollPane();
        jList17 = new javax.swing.JList();
        jScrollPane19 = new javax.swing.JScrollPane();
        jList19 = new javax.swing.JList();

        jList15.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane15.setViewportView(jList15);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jList1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jList1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jList1);

        jList2.setEnabled(false);
        jList2.setFocusable(false);
        jScrollPane2.setViewportView(jList2);
        jList2.getAccessibleContext().setAccessibleParent(jScrollPane1);

        jList3.setEnabled(false);
        jList3.setFocusable(false);
        jScrollPane3.setViewportView(jList3);
        jList3.getAccessibleContext().setAccessibleParent(jScrollPane1);

        jList4.setEnabled(false);
        jList4.setFocusable(false);
        jScrollPane4.setViewportView(jList4);
        jList4.getAccessibleContext().setAccessibleParent(jScrollPane1);

        jList5.setEnabled(false);
        jList5.setFocusable(false);
        jScrollPane5.setViewportView(jList5);
        jList5.getAccessibleContext().setAccessibleParent(jScrollPane1);

        jLabel1.setText("Neve");

        jLabel2.setText("Mi");

        jLabel3.setText("Mennyit");

        jLabel4.setText("Miből");

        jLabel5.setText("Ára");

        jList6.setEnabled(false);
        jList6.setFocusable(false);
        jScrollPane6.setViewportView(jList6);
        jList6.getAccessibleContext().setAccessibleParent(jScrollPane1);

        jLabel6.setText("Súlya");

        jButton1.setText("Megveszem->");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<- Eladom");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList7.setEnabled(false);
        jList7.setFocusable(false);
        jScrollPane7.setViewportView(jList7);

        jLabel7.setText("Neve");

        jLabel8.setText("Mi");

        jLabel9.setText("Mennyit");

        jLabel10.setText("Miből");

        jLabel11.setText("Ára");

        jList8.setEnabled(false);
        jList8.setFocusable(false);
        jScrollPane8.setViewportView(jList8);

        jLabel12.setText("Súlya");

        jList9.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jList9AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane9.setViewportView(jList9);

        jList10.setEnabled(false);
        jList10.setFocusable(false);
        jScrollPane10.setViewportView(jList10);

        jList11.setEnabled(false);
        jList11.setFocusable(false);
        jScrollPane11.setViewportView(jList11);

        jList12.setEnabled(false);
        jList12.setFocusable(false);
        jScrollPane12.setViewportView(jList12);

        jList13.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList13.setEnabled(false);
        jList13.setFocusable(false);
        jScrollPane13.setViewportView(jList13);
        jList13.getAccessibleContext().setAccessibleParent(jScrollPane1);

        jLabel13.setText("AC/DMG");

        jList14.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane14.setViewportView(jList14);

        jLabel14.setText("AC/DMG");

        jLabel15.setText("-");

        jLabel16.setText("Pénzed:");

        jScrollPane16.setViewportView(jList16);

        jScrollPane17.setViewportView(jList17);

        jScrollPane19.setViewportView(jList19);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel3)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel4)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(20, 20, 20)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel9)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel10)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel11)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel14))
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel13))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane13)
                                            .addComponent(jScrollPane5)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15)
                                        .addGap(48, 48, 48)
                                        .addComponent(jButton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(32, 32, 32))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane7)
                                    .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
       
        try {
            Statement stmtC=Kezdo.conn.conn.createStatement();
            String sqlC="select * from KARAKTERL WHERE KAR_ID='"+Charakters.CharakterId+"'";
            ResultSet rsC=stmtC.executeQuery(sqlC);
            rsC.next();
            Statement stmt=Kezdo.conn.conn.createStatement();
           String sql="select * from PANCEL WHERE P_SZINT<='"+rsC.getString("K_SZINT")+"'";
            //System.out.println(sql);
            ResultSet rs=stmt.executeQuery(sql);
           while (rs.next()) {
               if((rs.getString("P_KASZT").equals("any"))|| (rs.getString("P_KASZT").contains(rsC.getString("KAR_KASZT"))) ){
               modeln.addElement(rs.getString("P_NEV"));
               modelm.addElement(rs.getString("P_SZAM"));
               modelmm.addElement(rs.getString("P_MIT"));
               modelj.addElement("PÁNCÉL");
               modeldmg.addElement(rs.getString("P_AC"));
               modela.addElement(rs.getString("P_AR"));
               models.addElement(rs.getString("P_KG"));
               modelid.addElement(rs.getString("P_ID"));
               modelac.addElement("P");
               
           }}
           sql="select * from FEGYVEREK WHERE F_SZINT<='"+rsC.getString("K_SZINT")+"'";
           
            rs=stmt.executeQuery(sql);
            while (rs.next()) {
                if((rs.getString("F_KASZT").equals("any"))|| (rs.getString("F_KASZT").contains(rsC.getString("KAR_KASZT"))) ){
               modeln.addElement(rs.getString("F_NEV"));
               modelm.addElement(rs.getString("F_SZAM"));
               modelmm.addElement(rs.getString("F_MIT"));
               modelj.addElement("FEGYVER");
               modeldmg.addElement(rs.getString("F_DMG"));
               modela.addElement(rs.getString("F_AR"));
               models.addElement(rs.getString("F_KG"));
               modelid.addElement(rs.getString("F_ID"));
               modelac.addElement("F");
           }
            }
                  sql="select * from NYAKLANC WHERE NY_SZINT<='"+rsC.getString("K_SZINT")+"'";
            
            rs=stmt.executeQuery(sql);
            while (rs.next()) {
                if((rs.getString("NY_KASZT").equals("any"))|| (rs.getString("NY_KASZT").contains(rsC.getString("KAR_KASZT"))) ){
               modeln.addElement(rs.getString("NY_NEV"));
               modelm.addElement(rs.getString("NY_SZAM"));
               modelmm.addElement(rs.getString("NY_MIT"));
               modelj.addElement("NYAKLÁNC");
               
               modela.addElement(rs.getString("NY_AR"));
               models.addElement(rs.getString("NY_KG"));
               modelid.addElement(rs.getString("NY_ID"));
               modelac.addElement("NY");
           }}
                  sql="select * from GYURUK WHERE GY_SZINT<='"+rsC.getString("K_SZINT")+"'";
            
            rs=stmt.executeQuery(sql);
            while (rs.next()) {
                if((rs.getString("GY_KASZT").equals("any"))|| (rs.getString("GY_KASZT").contains(rsC.getString("KAR_KASZT"))) ){
               modeln.addElement(rs.getString("GY_NEV"));
               modelm.addElement(rs.getString("GY_SZAM"));
               modelmm.addElement(rs.getString("GY_MIT"));
               modelj.addElement("GYÜRÜ");
               modelid.addElement(rs.getString("GY_ID"));
               modelac.addElement("GY");
               modela.addElement(rs.getString("GY_AR"));
               models.addElement(rs.getString("GY_KG"));
           }}
                  sql="select * from POTION WHERE PO_SZINT<='"+rsC.getString("K_SZINT")+"'";
            
            rs=stmt.executeQuery(sql);
            while (rs.next()) {
                if((rs.getString("PO_KASZT").equals("any"))|| (rs.getString("PO_KASZT").contains(rsC.getString("KAR_KASZT"))) ){
               modeln.addElement(rs.getString("PO_NEV"));
               modelm.addElement(rs.getString("PO_SZAM"));
               modelmm.addElement(rs.getString("PO_MIT"));
               modelj.addElement("POTION");
                modelid.addElement(rs.getString("PO_ID"));
               modelac.addElement("PO");
               modela.addElement(rs.getString("PO_AR"));
               models.addElement(rs.getString("PO_KG"));
           }
            }
   
            jLabel15.setText(rsC.getString("K_PENZ"));
            jList1.setModel(modeln);
            jList2.setModel(modelj);
            jList3.setModel(modelm);
            jList4.setModel(modelmm);
            jList6.setModel(modela);
            jList5.setModel(models);
            jList13.setModel(modeldmg);
            jList16.setModel(modelac);
            jList17.setModel(modelid);
            
            
            
            
           } catch (SQLException ex) {
                Logger.getLogger(Market.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        
        
        
    }//GEN-LAST:event_formComponentShown

    private void jList1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jList1AncestorAdded
        
    }//GEN-LAST:event_jList1AncestorAdded

    private void jList9AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jList9AncestorAdded
    String nev=null;
    String ar=null;
    String suly=null;
    String mit=null;
    String mennyi=null;
    String ac=null;
    String dmg=null;
    String jel=null;
    String id=null;
    
    ResultSet rs;
    String itemCode=null;
        try {
        DefaultListModel modeln = new DefaultListModel();
        DefaultListModel modela = new DefaultListModel();
        DefaultListModel models = new DefaultListModel();
        DefaultListModel modelm = new DefaultListModel();
        DefaultListModel modelmm = new DefaultListModel();
        DefaultListModel modelac = new DefaultListModel();
        DefaultListModel modelj = new DefaultListModel();
        DefaultListModel modelid = new DefaultListModel();
        DefaultListModel modeldmg = new DefaultListModel();
        Statement stmt=Kezdo.conn.conn.createStatement();
         Statement stmt1=Kezdo.conn.conn.createStatement();
        String sql="SELECT * from ITEMEK WHERE I_PID='"+Charakters.CharakterId+"' and I_ON='0'";
        ResultSet rs1=stmt.executeQuery(sql);
        while(rs1.next()) {
            jel=rs1.getString("I_FAJ");
            itemCode=rs1.getString("I_ID");
            if(rs1.getString("I_FAJ").equals("F")){
           sql="SELECT * from  FEGYVEREK where F_ID='"+rs1.getString("I_FID")+"'";
           rs=stmt1.executeQuery(sql);
           rs.next();
           nev=rs.getString("F_NEV");

           ar=rs.getString("F_AR");
          
           suly= rs.getString("F_KG");
            
           mit=rs.getString("F_MIT");
           mennyi= rs.getString("F_SZAM"); 
           jel="Fegyver";
           id=rs.getString("F_ID");
           dmg="F";
           ac=rs.getString("F_DMG");
           
                   }
              if(rs1.getString("I_FAJ").equals("P")){
            sql="SELECT * from  PANCEL where P_ID='"+rs1.getString("I_FID")+"'";
           rs=stmt1.executeQuery(sql);
           rs.next();
           nev=rs.getString("P_NEV");
           ar=rs.getString("P_AR");
           suly= rs.getString("P_KG");       
           mit=rs.getString("P_MIT");
           mennyi= rs.getString("P_SZAM");       
           ac=rs.getString("P_AC");
             jel="Pancel";
             id=rs.getString("P_ID");
           dmg="P";
           
          
                   }
           if(rs1.getString("I_FAJ").equals("NY")){
          sql="SELECT * from  NYAKLANC where NY_ID='"+rs1.getString("I_FID")+"'";
           rs=stmt1.executeQuery(sql);
           rs.next();
           nev=rs.getString("NY_NEV");
           ar=rs.getString("NY_AR");
           suly= rs.getString("NY_KG");       
           mit=rs.getString("NY_MIT");
           mennyi= rs.getString("NY_SZAM");       
           ac="-";
           jel="Nyaklánc";
         id=rs.getString("NY_ID");
           dmg="NY";
         
          
                   }
           if(rs1.getString("I_FAJ").equals("GY")){
           sql="SELECT * from  GYURUK where GY_ID='"+rs1.getString("I_FID")+"'";
           rs=stmt1.executeQuery(sql);
           rs.next();
           nev=rs.getString("GY_NEV");
           ar=rs.getString("GY_AR");
           suly= rs.getString("GY_KG");       
           mit=rs.getString("GY_MIT");
           mennyi= rs.getString("GY_SZAM");       
           ac="-";
            jel="Gyűrű"; 
         id=rs.getString("GY_ID");
           dmg="GY";
           
                   }
            if(rs1.getString("I_FAJ").equals("PO")){
           sql="SELECT * from  POTION where PO_ID='"+rs1.getString("I_FID")+"'";
           rs=stmt1.executeQuery(sql);
           rs.next();
           nev=rs.getString("PO_NEV");
           ar=rs.getString("PO_AR");
           suly= rs.getString("PO_KG");       
           mit=rs.getString("PO_MIT");
           mennyi= rs.getString("PO_SZAM");       
           ac="-";
            jel="Potion";
            id=rs.getString("PO_ID");
           dmg="PO";
          
          
                   }
          modeln.addElement(nev); modela.addElement(ar);models.addElement(suly);modelm.addElement(mit);
          modelmm.addElement(mennyi); modelac.addElement(ac);modelj.addElement(jel);
          modeldmg.addElement(dmg);modelid.addElement(id);
        jList9.setModel(modeln);
        jList8.setModel(modela);
        jList7.setModel(models);
        jList12.setModel(modelm);
        jList11.setModel(modelmm); 
        jList14.setModel(modelac);
        jList10.setModel(modelj); 
      
        jList19.setModel(modelid); 
        }
    } catch (Exception ex) {
      System.out.println("baj van a tablenél: "+ex);
    }
    }//GEN-LAST:event_jList9AncestorAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            try {
                String id;
                ResultSet rs;
                String Penz;
                int ujpenz;
                String jel;
                Penz=jList6.getModel().getElementAt(jList1.getSelectedIndex()).toString();
                id=jList17.getModel().getElementAt(jList1.getSelectedIndex()).toString();
                jel=jList16.getModel().getElementAt(jList1.getSelectedIndex()).toString();
                Statement stmt=Kezdo.conn.conn.createStatement();
                String sql="insert into ITEMEK (I_PID,I_FID,I_FAJ,I_ON) "
                        + "VALUES ('"+Charakters.CharakterId+"','"+id+"','"+jel+"','0')";
                stmt.executeUpdate(sql);
                ujpenz=Integer.parseInt(jLabel15.getText())-Integer.parseInt(Penz);
                sql="UPDATE KARAKTERL set K_PENZ='"+ujpenz+"' where KAR_ID='"+Charakters.CharakterId+"'";
                stmt.executeUpdate(sql);
                this.setVisible(false);
                  new Market().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Market.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                try {
                String id;
                ResultSet rs;
                String Penz;
                int ujpenz;
                Penz=jList8.getModel().getElementAt(jList9.getSelectedIndex()).toString();
                id=jList19.getModel().getElementAt(jList9.getSelectedIndex()).toString();
                Statement stmt=Kezdo.conn.conn.createStatement();
                String sql="DELETE from ITEMEK where I_PID='"+Charakters.CharakterId+"' and I_FID='"+id+"' and I_ON='0' limit 1";
                stmt.executeUpdate(sql);
                //System.out.println(sql);
                ujpenz=Integer.parseInt(jLabel15.getText())+Integer.parseInt(Penz);
                sql="UPDATE KARAKTERL set K_PENZ='"+ujpenz+"' where KAR_ID='"+Charakters.CharakterId+"'";
                stmt.executeUpdate(sql);
                this.setVisible(false);
                  new Market().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Market.class.getName()).log(Level.SEVERE, null, ex);
            }
              
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Market.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Market.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Market.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Market.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Market().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList10;
    private javax.swing.JList jList11;
    private javax.swing.JList jList12;
    private javax.swing.JList jList13;
    private javax.swing.JList jList14;
    private javax.swing.JList jList15;
    private javax.swing.JList jList16;
    private javax.swing.JList jList17;
    private javax.swing.JList jList19;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JList jList4;
    private javax.swing.JList jList5;
    private javax.swing.JList jList6;
    private javax.swing.JList jList7;
    private javax.swing.JList jList8;
    private javax.swing.JList jList9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables
}
